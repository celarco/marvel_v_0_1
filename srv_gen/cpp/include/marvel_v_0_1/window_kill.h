/* Auto-generated by genmsg_cpp for file /home/hossein/imav2015/sandbox/marvel_v_0_1/srv/window_kill.srv */
#ifndef MARVEL_V_0_1_SERVICE_WINDOW_KILL_H
#define MARVEL_V_0_1_SERVICE_WINDOW_KILL_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace marvel_v_0_1
{
template <class ContainerAllocator>
struct window_killRequest_ {
  typedef window_killRequest_<ContainerAllocator> Type;

  window_killRequest_()
  : a(0)
  , b(0)
  {
  }

  window_killRequest_(const ContainerAllocator& _alloc)
  : a(0)
  , b(0)
  {
  }

  typedef int64_t _a_type;
  int64_t a;

  typedef int64_t _b_type;
  int64_t b;


  typedef boost::shared_ptr< ::marvel_v_0_1::window_killRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::marvel_v_0_1::window_killRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct window_killRequest
typedef  ::marvel_v_0_1::window_killRequest_<std::allocator<void> > window_killRequest;

typedef boost::shared_ptr< ::marvel_v_0_1::window_killRequest> window_killRequestPtr;
typedef boost::shared_ptr< ::marvel_v_0_1::window_killRequest const> window_killRequestConstPtr;



template <class ContainerAllocator>
struct window_killResponse_ {
  typedef window_killResponse_<ContainerAllocator> Type;

  window_killResponse_()
  : sum(0)
  {
  }

  window_killResponse_(const ContainerAllocator& _alloc)
  : sum(0)
  {
  }

  typedef int64_t _sum_type;
  int64_t sum;


  typedef boost::shared_ptr< ::marvel_v_0_1::window_killResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::marvel_v_0_1::window_killResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct window_killResponse
typedef  ::marvel_v_0_1::window_killResponse_<std::allocator<void> > window_killResponse;

typedef boost::shared_ptr< ::marvel_v_0_1::window_killResponse> window_killResponsePtr;
typedef boost::shared_ptr< ::marvel_v_0_1::window_killResponse const> window_killResponseConstPtr;


struct window_kill
{

typedef window_killRequest Request;
typedef window_killResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct window_kill
} // namespace marvel_v_0_1

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::marvel_v_0_1::window_killRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::marvel_v_0_1::window_killRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::marvel_v_0_1::window_killRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "36d09b846be0b371c5f190354dd3153e";
  }

  static const char* value(const  ::marvel_v_0_1::window_killRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x36d09b846be0b371ULL;
  static const uint64_t static_value2 = 0xc5f190354dd3153eULL;
};

template<class ContainerAllocator>
struct DataType< ::marvel_v_0_1::window_killRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "marvel_v_0_1/window_killRequest";
  }

  static const char* value(const  ::marvel_v_0_1::window_killRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::marvel_v_0_1::window_killRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 a\n\
int64 b\n\
\n\
";
  }

  static const char* value(const  ::marvel_v_0_1::window_killRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::marvel_v_0_1::window_killRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::marvel_v_0_1::window_killResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::marvel_v_0_1::window_killResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::marvel_v_0_1::window_killResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b88405221c77b1878a3cbbfff53428d7";
  }

  static const char* value(const  ::marvel_v_0_1::window_killResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xb88405221c77b187ULL;
  static const uint64_t static_value2 = 0x8a3cbbfff53428d7ULL;
};

template<class ContainerAllocator>
struct DataType< ::marvel_v_0_1::window_killResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "marvel_v_0_1/window_killResponse";
  }

  static const char* value(const  ::marvel_v_0_1::window_killResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::marvel_v_0_1::window_killResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 sum\n\
\n\
\n\
";
  }

  static const char* value(const  ::marvel_v_0_1::window_killResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::marvel_v_0_1::window_killResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::marvel_v_0_1::window_killRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.a);
    stream.next(m.b);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct window_killRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::marvel_v_0_1::window_killResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.sum);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct window_killResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<marvel_v_0_1::window_kill> {
  static const char* value() 
  {
    return "6a2e34150c00229791cc89ff309fff21";
  }

  static const char* value(const marvel_v_0_1::window_kill&) { return value(); } 
};

template<>
struct DataType<marvel_v_0_1::window_kill> {
  static const char* value() 
  {
    return "marvel_v_0_1/window_kill";
  }

  static const char* value(const marvel_v_0_1::window_kill&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<marvel_v_0_1::window_killRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6a2e34150c00229791cc89ff309fff21";
  }

  static const char* value(const marvel_v_0_1::window_killRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<marvel_v_0_1::window_killRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "marvel_v_0_1/window_kill";
  }

  static const char* value(const marvel_v_0_1::window_killRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<marvel_v_0_1::window_killResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6a2e34150c00229791cc89ff309fff21";
  }

  static const char* value(const marvel_v_0_1::window_killResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<marvel_v_0_1::window_killResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "marvel_v_0_1/window_kill";
  }

  static const char* value(const marvel_v_0_1::window_killResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // MARVEL_V_0_1_SERVICE_WINDOW_KILL_H

